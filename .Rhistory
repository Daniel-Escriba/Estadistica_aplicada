knitr::opts_chunk$set(echo = TRUE)
data = read.table("hotel.txt" , sep="", header=T)
data = data[-1]
data
summary(data)
x = data$Habitaciones
y = data$Ingreso
plot(x=x, y=y,
pch=18, col="blue",
xlab="Habitaciones",
ylab="Ingreso",
main="Diagrama de dispersion")
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
plot(y ~ x ,
pch=15, col="blue",
xlab="Habitaciones", ylab="Ingreso", main="Diagrama de dispersion")
abline(modelo, col='red', lwd=2)
habitaciones = data.frame(x=70)
habitaciones
ingreso_est = predict(object = modelo, newdata = habitaciones)
ingreso_est
habitaciones = data.frame(x=seq(70, 200, 10))
habitaciones
ingreso_est = predict(object = modelo, newdata = habitaciones)
as.data.frame(ingreso_est)
habitaciones = data.frame(x=70)
habitaciones
ingreso_est = predict(object = modelo, newdata = habitaciones)
ingreso_est
habitaciones = data.frame(x=seq(70, 200, 10))
habitaciones
ingreso_est = predict(object = modelo, newdata = habitaciones)
as.data.frame(ingreso_est)
modelo = lm(y ~ x)
summary(modelo)
modelo$coefficients
knitr::opts_chunk$set(echo = TRUE)
data = read.table("entrega.txt" , sep="", header=T)
data = data[-1]
data
data = read.table("entrega.txt" , sep="", header=T)
data = data[-1]
data
summary(data)
summary(data)
x = data$Habitaciones
y = data$Ingreso
plot(x=x, y=y,
pch=18, col="blue",
xlab="Habitaciones",
ylab="Ingreso",
main="Diagrama de dispersion")
x = data$distancia.millas
y = data$T.envio.dias
plot(x=x, y=y,
pch=18, col="blue",
xlab="Distancias (millas)",
ylab="Tiempo de envio en (dias)",
main="Diagrama de dispersion")
modelo = lm(y ~ x)
summary(modelo)
modelo$coefficients
plot(y ~ x ,
pch=15, col="blue",
xlab="Distancias (millas)", ylab="Tiempo de envio en (dias)", main="Diagrama de dispersion")
abline(modelo, col='red', lwd=2)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
distancias_futuras
ingreso_est = predict(object = modelo, newdata = distancias_futuras)
as.data.frame(ingreso_est)
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
x = data$distancia.millas
y = data$T.envio.dias
plot(x=x, y=y,
pch=18, col="blue",
xlab="Distancias (millas)",
ylab="Tiempo de envio en (dias)",
main="Diagrama de dispersion")
data = read.table("entrega.txt" , sep="", header=T)
data = data[-1]
data
summary(data)
summary(data)
x = data$distancia.millas
y = data$T.envio.dias
plot(x=x, y=y,
pch=18, col="blue",
xlab="Distancias (millas)",
ylab="Tiempo de envio en (dias)",
main="Diagrama de dispersion")
data = read.table("entrega.txt" , sep="", header=T)
data = data[-1]
data
summary(data)
x = data$distancia.millas
y = data$T.envio.dias
plot(x=x, y=y,
pch=18, col="blue",
xlab="Distancias (millas)",
ylab="Tiempo de envio en (dias)",
main="Diagrama de dispersion")
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
modelo = lm(y ~ x)
summary(modelo)
modelo$coefficients
#Leemos el archivo redactado
data = read.table("entrega.txt" , sep="", header=T)
data = data[-1]
data
# Revisamos  los estadisticos
summary(data)
x = data$distancia.millas
y = data$T.envio.dias
plot(x=x, y=y,
pch=18, col="blue",
xlab="Distancias (millas)",
ylab="Tiempo de envio en (dias)",
main="Diagrama de dispersion")
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
plot(y ~ x ,
pch=15, col="blue",
xlab="Distancias (millas)", ylab="Tiempo de envio en (dias)", main="Diagrama de dispersion")
abline(modelo, col='red', lwd=2)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
distancias_futuras
ingreso_est = predict(object = modelo, newdata = distancias_futuras)
as.data.frame(ingreso_est)
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
plot(y ~ x ,
pch=15, col="blue",
xlab="Distancias (millas)", ylab="Tiempo de envio en (dias)", main="Diagrama de dispersion")
abline(modelo, col='red', lwd=2)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
distancias_futuras
ingreso_est = predict(object = modelo, newdata = distancias_futuras)
as.data.frame(ingreso_est)
#Leemos el archivo redactado
data = read.table("entrega.txt" , sep="", header=T)
data = data[-1]
data
# Revisamos  los estadisticos
summary(data)
x = data$distancia.millas
y = data$T.envio.dias
plot(x=x, y=y,
pch=18, col="blue",
xlab="Distancias (millas)",
ylab="Tiempo de envio en (dias)",
main="Diagrama de dispersion")
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
plot(y ~ x ,
pch=15, col="blue",
xlab="Distancias (millas)", ylab="Tiempo de envio en (dias)", main="Diagrama de dispersion")
abline(modelo, col='red', lwd=2)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
distancias_futuras
ingreso_est = predict(object = modelo, newdata = distancias_futuras)
as.data.frame(ingreso_est)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
distancias_futuras
ingreso_est = predict(object = modelo, newdata = distancias_futuras)
as.data.frame(dias_est)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
distancias_futuras
dias_est = predict(object = modelo, newdata = distancias_futuras)
as.data.frame(dias_est)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
distancias_futuras
# Combinar distancias y predicciones en un solo data frame
resultados = data.frame(Distancia = distancias_futuras$x,
Prediccion = dias_est)
# Mostrar el data frame
resultados
distancias_futuras = data.frame(x=seq(900, 1000, 10))
distancias_futuras
# Combinar distancias y predicciones en un solo data frame
resultados = data.frame(Distancia = distancias_futuras$x,
Prediccion = dias_est)
# Mostrar el data frame
resultados
# Si quieres una visualizaci칩n m치s elegante, puedes usar:
# library(knitr)
# kable(resultados, digits = 5)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
# Combinar distancias y predicciones en un solo data frame
resultados = data.frame(Distancia = distancias_futuras$x,
Prediccion = dias_est)
# Mostrar el data frame
resultados
# Si quieres una visualizaci칩n m치s elegante, puedes usar:
library(knitr)
kable(resultados, digits = 5)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
# Combinar distancias y predicciones en un solo data frame
resultados = data.frame(Distancia = distancias_futuras$x,
Prediccion = dias_est)
# Mostrar el data frame
# utilizamos la siguiente libreria, para una mejor visualizacion
library(knitr)
kable(resultados, digits = 5)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
# Combinar distancias y predicciones en un solo data frame
resultados = data.frame(Distancia = distancias_futuras$x,
"Dias estimados" = dias_est)
# Mostrar el data frame
# utilizamos la siguiente libreria, para una mejor visualizacion
library(knitr)
kable(resultados, digits = 5)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
# Combinar distancias y predicciones en un solo data frame
resultados = data.frame(Distancia = distancias_futuras$x,
Dias_estimados = dias_est)
# Mostrar el data frame
# utilizamos la siguiente libreria, para una mejor visualizacion
library(knitr)
kable(resultados, digits = 5)
#Leemos el archivo redactado
data = read.table("entrega.txt" , sep="", header=T)
data = data[-1]
data
# Revisamos  los estadisticos
summary(data)
x = data$distancia.millas
y = data$T.envio.dias
plot(x=x, y=y,
pch=18, col="blue",
xlab="Distancias (millas)",
ylab="Tiempo de envio en (dias)",
main="Diagrama de dispersion")
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
plot(y ~ x ,
pch=15, col="blue",
xlab="Distancias (millas)", ylab="Tiempo de envio en (dias)", main="Diagrama de dispersion")
abline(modelo, col='red', lwd=2)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
# Combinar distancias y predicciones en un solo data frame
resultados = data.frame(Distancia = distancias_futuras$x,
Dias_estimados = dias_est)
# Mostrar el data frame
# utilizamos la siguiente libreria, para una mejor visualizacion
library(knitr)
kable(resultados, digits = 5)
#Leemos el archivo redactado
data = read.table("entrega.txt" , sep="", header=T)
data = data[-1]
data
# Revisamos  los estadisticos
summary(data)
x = data$distancia.millas
y = data$T.envio.dias
plot(x=x, y=y,
pch=18, col="blue",
xlab="Distancias (millas)",
ylab="Tiempo de envio en (dias)",
main="Diagrama de dispersion")
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
plot(y ~ x ,
pch=15, col="blue",
xlab="Distancias (millas)", ylab="Tiempo de envio en (dias)", main="Diagrama de dispersion")
abline(modelo, col='red', lwd=2)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
# Hacer las predicciones
dias_est = predict(object = modelo, newdata = distancias_futuras)
# Combinar distancias y predicciones en un solo data frame
resultados = data.frame(Distancia = distancias_futuras$x,
Dias_estimados = dias_est)
# Mostrar el data frame
# utilizamos la siguiente libreria, para una mejor visualizacion
library(knitr)
kable(resultados, digits = 5)
#Leemos el archivo redactado
data = read.table("entrega.txt" , sep="", header=T)
data = data[-1]
data
# Revisamos  los estadisticos
summary(data)
x = data$distancia.millas
y = data$T.envio.dias
plot(x=x, y=y,
pch=18, col="blue",
xlab="Distancias (millas)",
ylab="Tiempo de envio en (dias)",
main="Diagrama de dispersion")
modelo = lm(y ~ x)
#summary(modelo)
modelo$coefficients
plot(y ~ x ,
pch=15, col="blue",
xlab="Distancias (millas)", ylab="Tiempo de envio en (dias)", main="Diagrama de dispersion")
abline(modelo, col='red', lwd=2)
distancias_futuras = data.frame(x=seq(900, 1000, 10))
# Hacer las predicciones
dias_est = predict(object = modelo, newdata = distancias_futuras)
# Combinar distancias y predicciones en un solo data frame
resultados = data.frame(Distancia = distancias_futuras$x,
Dias_estimados = dias_est)
# Mostrar el data frame
# utilizamos la siguiente libreria, para una mejor visualizacion
library(knitr)
kable(resultados, digits = 5)
